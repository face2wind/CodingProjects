<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="com.adobe.flexide.as.core.codetemplates.action_script" deleted="false" description="覆盖basesprite的createchildren函数" enabled="true" name="cc">/**&#13;
		 * 此函数是视图的内容初始化函数&lt;br/&gt;对父类的覆盖 &#13;
		 * &#13;
		 */		&#13;
		protected override function createChildren():void&#13;
		{&#13;
			super.createChildren();&#13;
			&#13;
		}</template><template autoinsert="true" context="com.adobe.flexide.as.core.codetemplates.action_script" deleted="false" description="新建单例" enabled="true" name="instance">{&#13;
	if(instance)&#13;
		throw new Error("${enclosing_type} is singleton class and allready exists!");&#13;
	instance = this;&#13;
}&#13;
&#13;
/**&#13;
 * 单例&#13;
 */&#13;
private static var instance:${enclosing_type};&#13;
/**&#13;
 * 获取单例&#13;
 */&#13;
public static function getInstance():${enclosing_type}&#13;
{&#13;
	if(!instance)&#13;
		instance = new ${enclosing_type}();&#13;
	&#13;
	return instance;&#13;
}</template><template autoinsert="true" context="com.adobe.flexide.as.core.codetemplates.action_script" deleted="false" description="创建被加到显示列表和移除显示列表的响应函数" enabled="true" name="onsh">&#13;
		/**&#13;
		 * 被加到显示列表时执行 &#13;
		 */		&#13;
		public override function onShowHandler():void&#13;
		{&#13;
			&#13;
		}&#13;
		&#13;
		/**&#13;
		 * 从显示列表移除时执行 &#13;
		 */		&#13;
		public override function onHideHandler():void&#13;
		{&#13;
			&#13;
		}</template><template autoinsert="true" context="com.adobe.flexide.as.core.codetemplates.action_script" deleted="false" description="重写父类update函数" enabled="true" name="onupdate">/**&#13;
		 * 属性变更，更新视图 &#13;
		 * &#13;
		 */	&#13;
		 protected override function update():void&#13;
		{&#13;
			super.update();&#13;
			}</template><template autoinsert="true" context="com.adobe.flexide.as.core.codetemplates.action_script" deleted="false" description="创建覆盖basesprite的resume和dispose函数" enabled="true" name="rd">		/**&#13;
		 * [继承] 恢复资源&#13;
		 * &#13;
		 */		&#13;
		public override function resume():void&#13;
		{&#13;
			super.resume();&#13;
			&#13;
		}&#13;
		&#13;
		/**&#13;
		 * [继承] 释放资源&#13;
		 * &#13;
		 */		&#13;
		public override function dispose():void&#13;
		{&#13;
			super.dispose();&#13;
			&#13;
		}</template><template autoinsert="true" context="com.adobe.flexide.as.core.codetemplates.action_script" deleted="false" description="创建set和get并派发属性改变事件" enabled="true" name="sge"> /**&#13;
		 * ${desc}&#13;
		 */&#13;
		private var _${name}:${type:values(int,String,Number,Boolean,Object)};&#13;
		/**&#13;
		 * ${desc}&#13;
		 */&#13;
		public function get ${name}():${type:values(int,String,Number,Boolean,Object)}&#13;
		{&#13;
			return _${name};&#13;
		}&#13;
		/**&#13;
		 * ${desc}&#13;
		 */&#13;
		public function set ${name}(value:${type:values(int,String,Number,Boolean,Object)}):void&#13;
		{&#13;
			if(_${name} == value)&#13;
				return;&#13;
			&#13;
			var _oldValue:* = _${name};&#13;
			_${name} = value;&#13;
			dispatchEvent(PropertyChangeEvent.createUpdateEvent("${name}", _oldValue, _${name}));&#13;
		}</template><template autoinsert="true" context="com.adobe.flexide.as.core.codetemplates.action_script" deleted="false" description="覆盖basesprite的update函数" enabled="true" name="ud">		protected override function update():void&#13;
		{&#13;
			super.update();&#13;
			&#13;
		}</template></templates>